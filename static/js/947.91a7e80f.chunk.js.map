{"version":3,"file":"static/js/947.91a7e80f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/filter/filterSelector.js","redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formField\":\"ContactForm_formField__O5fo+\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formButton\":\"ContactForm_formButton__TN6Jq\",\"contactFormInput\":\"ContactForm_contactFormInput__eC5HJ\"};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filterSelector';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { selectContacts } from '../../redux/contacts/contactsSelector';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    // Reset form field\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          placeholder=\"name\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spacess, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        {' '}\n        Add Contact{' '}\n      </button>\n    </form>\n  );\n};\n\n// ContactForm.propTypes = {\n//     addContact: PropTypes.func.isRequired,\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       })\n//     ),\n//   };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"findName\":\"Filter_findName__o0kjy\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <p className={css.findName}>Find Contacts by Name</p>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search by name\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__21QwY\",\"deleteBtn\":\"ContactListItem_deleteBtn__-+XMY\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contactsOperation';\n\nexport const ContactListItem = ({ filteredContact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(filteredContact.id));\n  };\n\n  return (\n    <li className={css.contactListItem}>\n      <p>{filteredContact.name} :</p>\n      <p>{filteredContact.number}</p>\n      <button className={css.deleteBtn} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  filteredContact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { Comment } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <Comment\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"comment-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"comment-wrapper\"\n    color=\"#fff\"\n    backgroundColor=\"#F4442E\"\n  />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n// prettier-ignore\nimport { selectFilteredContacts, selectError, selectIsLoading } from '../../redux/contacts/contactsSelector';\nimport { fetchContacts } from '../../redux/contacts/contactsOperation';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { Loader } from '../Loader/Loader';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.contactList}>\n      {/*    if loading and not error, show Loader    */}\n      {isLoading && !error && <Loader />}\n\n      {/*  if not loading, not error and filtered contacts is empty, show warning */}\n      {!isLoading && !error && filterContacts.length === 0 && (\n        <p>The Phonebook is empty.Please add a contact.</p>\n      )}\n\n      {/*  if not loading, not error and have atlease 1 filtered contact, show ContactListItem  */}\n      {!isLoading &&\n        !error &&\n        filterContacts.length > 0 &&\n        filterContacts.map(filteredContact => (\n          <ContactListItem\n            key={filteredContact.id}\n            filteredContact={filteredContact}\n            // deleteContact={deleteContact}\n          />\n        ))}\n    </ul>\n  );\n};\n\n// import { ContactListItem } from './ContactListItem/ContactListItem';\n// // import PropTypes from 'prop-types';\n// import css from './ContactList.module.css';\n// import { useSelector } from 'react-redux';\n// import { getContacts, getFilter } from '../../redux/contacts/contactsSelector';\n\n// const getFilteredContacts = (contacts, filter) => {\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n\n// export const ContactList = () => {\n//   const contacts = useSelector(getContacts);\n//   const filter = useSelector(getFilter);\n\n//   const filteredContacts = getFilteredContacts(contacts, filter);\n\n//   return (\n//     <ul className={css.contactList}>\n//       {filteredContacts.map(filteredContact => (\n//         <ContactListItem\n//           key={filteredContact.id}\n//           filteredContact={filteredContact}\n//           // deleteContact={deleteContact}\n//         />\n//       ))}\n//     </ul>\n//   );\n// };\n\n// ContactList.propTypes = {\n//   filterContact: PropTypes.func.isRequired,\n//   deleteContact: PropTypes.func.isRequired,\n// };\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Contacts Page</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </HelmetProvider>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectContacts","items","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","className","css","onSubmit","e","preventDefault","trim","find","alert","concat","addContact","children","_jsx","type","pattern","title","required","placeholder","value","onChange","target","Filter","setFilter","ContactListItem","_ref","filteredContact","onClick","deleteContact","id","Loader","Comment","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","backgroundColor","ContactList","filterContacts","useEffect","fetchContacts","length","map","HelmetProvider","Helmet"],"sourceRoot":""}